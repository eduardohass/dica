services:
  # proxy:
  #   container_name: nginx
  #   image: nginx
  #   volumes:
  #     - type: bind
  #       source: ./proxy/nginx.conf
  #       target: /etc/nginx/conf.d/default.conf
  #       read_only: true
  #   ports:
  #     - 80:80
  #   networks:
  #     - dica_net
  #   depends_on:
  #     - postgres
  #     - api

  # 
  # api:
  #   container_name: dica-api
  #   image: eduhass/dica:latest
  #   environment:
  #     DB_HOST: dica.cfa2g2iiaweu.us-east-1.rds.amazonaws.com
  #     DB_USER: dica_admin
  #     DB_PASSWORD: DicaAdmin321!#
  #     DB_NAME: dica
  #     DB_PORT: 5432
  #   # depends_on:
  #   #   - postgres
  #   networks:
  #     - dica_net
  #   # links: 
  #   #   - postgres
    
  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      PGDATA: /data/postgres
      POSTGRES_DB: dica
      POSTGRES_LOG_STATEMENT: 'all'  # Mostra todas as queries executadas
      POSTGRES_LOG_MIN_MESSAGES: 'debug1'  # Mostra mais detalhes de debug
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - dica_net
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      interval: 30s
      timeout: 50s
      retries: 5
      start_period: 50s

  api:
    container_name: api
    depends_on:
      postgres:
        condition: service_healthy
    build: .
    image: dica-api:latest
    ports:
      - "8080:8080"
    networks:
      - dica_net
    environment:
      # GIN_MODE: release
      DB_HOST: postgres
      DB_USER: postgres
      DB_PASSWORD: changeme
      DB_NAME: dica
      DB_PORT: 5432
    links: 
      - postgres
  
  # pgadmin:
  #   container_name: pgadmin
  #   image: dpage/pgadmin4
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
  #     PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
  #     PGADMIN_LISTEN_PORT: 80
  #     PGADMIN_CONFIG_SERVER_MODE: 'False'
  #     PGADMIN_CONFIG_CONSOLE_LOG_LEVEL: 10
  #   volumes:
  #     - pgadmin:/var/lib/pgadmin
  #     - ./servers.json:/pgadmin4/servers.json  # Monta um arquivo JSON para configuração do servidor
  #   ports:
  #     - "${PGADMIN_PORT:-5050}:80"
  #   networks:
  #     - dica_net
  #   restart: unless-stopped
  #   depends_on:
  #     - postgres


networks:
  dica_net:
    driver: bridge

volumes:
  postgres:
  pgadmin:
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  namespace: dica
type: Opaque
data:
  postgres-password: cG9zdGdyZXM=  # Ex: echo -n "senha123" | base64
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: ""  # Usa o storage padrão do cluster
  resources:
    requests:
      storage: 5Gi  # Ajuste o tamanho conforme necessário
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-pv
spec:
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain  # Mantém os dados após o PVC ser deletado
  hostPath:
    path: /data/postgres  # Crie este diretório no nó do cluster
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: dica
spec:
  serviceName: postgres-service
  replicas: 1  # Para HA, use mais réplicas e um operador como Patroni
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:latest
        # No seu deployment.yaml (container da aplicação)
        env:
        - name: DB_HOST
          value: "postgres"  # Nome do service do PostgreSQL
        - name: DB_PORT
          value: "5432"
        - name: DB_USER
          value: "postgres"
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: postgres-password
        - name: DB_NAME
          value: "meubanco"
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
  - metadata:
      name: postgres-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: ""
      resources:
        requests:
          storage: 5Gi  # Deve ser igual ao PVC
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: dica
spec:
  clusterIP: None  # Headless service para StatefulSet
  selector:
    app: postgres
  ports:
  - name: postgres
    port: 5432
    targetPort: 5432
---

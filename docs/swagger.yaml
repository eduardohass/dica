definitions:
  answer.CreateAnswerRequest:
    properties:
      answer:
        type: string
    type: object
  answer.CreateAnswerResponse:
    properties:
      data:
        $ref: '#/definitions/schemas.AnswerResponse'
      message:
        type: string
    type: object
  answer.DeleteAnswerResponse:
    properties:
      data:
        $ref: '#/definitions/schemas.AnswerResponse'
      message:
        type: string
    type: object
  answer.ErrorResponse:
    properties:
      errorCode:
        type: string
      message:
        type: string
    type: object
  answer.ListAnswersResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/schemas.AnswerResponse'
        type: array
      message:
        type: string
    type: object
  answer.ShowAnswerResponse:
    properties:
      data:
        $ref: '#/definitions/schemas.AnswerResponse'
      message:
        type: string
    type: object
  answer.UpdateAnswerRequest:
    properties:
      answer:
        type: string
    type: object
  answer.UpdateAnswerResponse:
    properties:
      data:
        $ref: '#/definitions/schemas.AnswerResponse'
      message:
        type: string
    type: object
  letter.CreateLetterRequest:
    properties:
      type:
        type: string
    type: object
  letter.CreateLetterResponse:
    properties:
      data:
        $ref: '#/definitions/schemas.LetterResponse'
      message:
        type: string
    type: object
  letter.DeleteLetterResponse:
    properties:
      data:
        $ref: '#/definitions/schemas.LetterResponse'
      message:
        type: string
    type: object
  letter.ErrorResponse:
    properties:
      errorCode:
        type: string
      message:
        type: string
    type: object
  letter.ListLettersResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/schemas.LetterResponse'
        type: array
      message:
        type: string
    type: object
  letter.ShowLetterResponse:
    properties:
      data:
        $ref: '#/definitions/schemas.LetterResponse'
      message:
        type: string
    type: object
  letter.UpdateLetterRequest:
    properties:
      type:
        type: string
    type: object
  letter.UpdateLetterResponse:
    properties:
      data:
        $ref: '#/definitions/schemas.LetterResponse'
      message:
        type: string
    type: object
  lettersAnswer.CreateLetterAnswerRequest:
    properties:
      idAnswer:
        type: integer
      idLetter:
        type: integer
    type: object
  lettersAnswer.CreateLetterAnswerResponse:
    properties:
      data:
        $ref: '#/definitions/schemas.LetterAnswerResponse'
      message:
        type: string
    type: object
  lettersAnswer.DeleteLetterAnswerResponse:
    properties:
      data:
        $ref: '#/definitions/schemas.LetterAnswerResponse'
      message:
        type: string
    type: object
  lettersAnswer.ErrorResponse:
    properties:
      errorCode:
        type: string
      message:
        type: string
    type: object
  lettersAnswer.ListLettersAnswerResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/schemas.LetterAnswerResponse'
        type: array
      message:
        type: string
    type: object
  lettersAnswer.ShowLetterAnswerResponse:
    properties:
      data:
        $ref: '#/definitions/schemas.LetterAnswerResponse'
      message:
        type: string
    type: object
  lettersAnswer.UpdateLetterAnswerRequest:
    properties:
      idAnswer:
        type: integer
      idLetter:
        type: integer
    type: object
  lettersAnswer.UpdateLetterAnswerResponse:
    properties:
      data:
        $ref: '#/definitions/schemas.LetterAnswerResponse'
      message:
        type: string
    type: object
  opening.CreateOpeningRequest:
    properties:
      company:
        type: string
      link:
        type: string
      location:
        type: string
      remote:
        type: boolean
      role:
        type: string
      salary:
        type: integer
    type: object
  opening.CreateOpeningResponse:
    properties:
      data:
        $ref: '#/definitions/schemas.OpeningResponse'
      message:
        type: string
    type: object
  opening.DeleteOpeningResponse:
    properties:
      data:
        $ref: '#/definitions/schemas.OpeningResponse'
      message:
        type: string
    type: object
  opening.ErrorResponse:
    properties:
      errorCode:
        type: string
      message:
        type: string
    type: object
  opening.ListOpeningsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/schemas.OpeningResponse'
        type: array
      message:
        type: string
    type: object
  opening.ShowOpeningResponse:
    properties:
      data:
        $ref: '#/definitions/schemas.OpeningResponse'
      message:
        type: string
    type: object
  opening.UpdateOpeningRequest:
    properties:
      company:
        type: string
      link:
        type: string
      location:
        type: string
      remote:
        type: boolean
      role:
        type: string
      salary:
        type: integer
    type: object
  opening.UpdateOpeningResponse:
    properties:
      data:
        $ref: '#/definitions/schemas.OpeningResponse'
      message:
        type: string
    type: object
  question.CreateQuestionRequest:
    properties:
      question:
        type: string
    type: object
  question.CreateQuestionResponse:
    properties:
      data:
        $ref: '#/definitions/schemas.QuestionResponse'
      message:
        type: string
    type: object
  question.DeleteQuestionResponse:
    properties:
      data:
        $ref: '#/definitions/schemas.QuestionResponse'
      message:
        type: string
    type: object
  question.ErrorResponse:
    properties:
      errorCode:
        type: string
      message:
        type: string
    type: object
  question.ListQuestionsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/schemas.QuestionResponse'
        type: array
      message:
        type: string
    type: object
  question.ShowQuestionResponse:
    properties:
      data:
        $ref: '#/definitions/schemas.QuestionResponse'
      message:
        type: string
    type: object
  question.UpdateQuestionRequest:
    properties:
      question:
        type: string
    type: object
  question.UpdateQuestionResponse:
    properties:
      data:
        $ref: '#/definitions/schemas.QuestionResponse'
      message:
        type: string
    type: object
  questionAnswer.CreateQuestionAnswerRequest:
    properties:
      idAnswer1:
        type: integer
      idAnswer2:
        type: integer
      idAnswer3:
        type: integer
      idAnswer4:
        type: integer
      idQuestion:
        type: integer
    type: object
  questionAnswer.DeleteQuestionAnswerResponse:
    properties:
      data:
        $ref: '#/definitions/schemas.QuestionAnswerResponse'
      message:
        type: string
    type: object
  questionAnswer.ErrorResponse:
    properties:
      errorCode:
        type: string
      message:
        type: string
    type: object
  questionAnswer.ListQuestionsAnswerResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/schemas.QuestionAnswerResponse'
        type: array
      message:
        type: string
    type: object
  questionAnswer.ShowQuestionAnswerResponse:
    properties:
      data:
        $ref: '#/definitions/schemas.QuestionAnswerResponse'
      message:
        type: string
    type: object
  questionAnswer.UpdateQuestionAnswerRequest:
    properties:
      idAnswer1:
        type: integer
      idAnswer2:
        type: integer
      idAnswer3:
        type: integer
      idAnswer4:
        type: integer
      idQuestion:
        type: integer
    type: object
  questionAnswer.UpdateQuestionAnswerResponse:
    properties:
      data:
        $ref: '#/definitions/schemas.QuestionAnswerResponse'
      message:
        type: string
    type: object
  schemas.AnswerResponse:
    properties:
      answer:
        type: string
      createdAt:
        type: string
      deletedAt:
        type: string
      id:
        type: integer
      updatedAt:
        type: string
    type: object
  schemas.LetterAnswerResponse:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
      idAnswer:
        type: integer
      idLetter:
        type: integer
      updatedAt:
        type: string
    type: object
  schemas.LetterResponse:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
      id:
        type: integer
      type:
        type: string
      updatedAt:
        type: string
    type: object
  schemas.OpeningResponse:
    properties:
      company:
        type: string
      createdAt:
        type: string
      deletedAt:
        type: string
      id:
        type: integer
      link:
        type: string
      location:
        type: string
      remote:
        type: boolean
      role:
        type: string
      salary:
        type: integer
      updatedAt:
        type: string
    type: object
  schemas.QuestionAnswerResponse:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
      idAnswer1:
        type: integer
      idAnswer2:
        type: integer
      idAnswer3:
        type: integer
      idAnswer4:
        type: integer
      idQuestion:
        type: integer
      updatedAt:
        type: string
    type: object
  schemas.QuestionResponse:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
      id:
        type: integer
      question:
        type: string
      updatedAt:
        type: string
    type: object
  schemas.UserAnswerResponse:
    properties:
      IdQuestion:
        type: integer
      createdAt:
        type: string
      deletedAt:
        type: string
      idAnswer1:
        type: integer
      idAnswer2:
        type: integer
      idAnswer3:
        type: integer
      idAnswer4:
        type: integer
      updatedAt:
        type: string
    type: object
  userAnswer.CreateUserAnswerRequest:
    properties:
      idAnswer1:
        type: integer
      idAnswer2:
        type: integer
      idAnswer3:
        type: integer
      idAnswer4:
        type: integer
      idQuestion:
        type: integer
    type: object
  userAnswer.CreateUserAnswerResponse:
    properties:
      data:
        $ref: '#/definitions/schemas.UserAnswerResponse'
      message:
        type: string
    type: object
  userAnswer.DeleteUserAnswerResponse:
    properties:
      data:
        $ref: '#/definitions/schemas.UserAnswerResponse'
      message:
        type: string
    type: object
  userAnswer.ErrorResponse:
    properties:
      errorCode:
        type: string
      message:
        type: string
    type: object
  userAnswer.ListUsersAnswerResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/schemas.UserAnswerResponse'
        type: array
      message:
        type: string
    type: object
  userAnswer.ShowUserAnswerResponse:
    properties:
      data:
        $ref: '#/definitions/schemas.UserAnswerResponse'
      message:
        type: string
    type: object
  userAnswer.UpdateUserAnswerRequest:
    properties:
      idAnswer1:
        type: integer
      idAnswer2:
        type: integer
      idAnswer3:
        type: integer
      idAnswer4:
        type: integer
      idQuestion:
        type: integer
    type: object
  userAnswer.UpdateUserAnswerResponse:
    properties:
      data:
        $ref: '#/definitions/schemas.UserAnswerResponse'
      message:
        type: string
    type: object
info:
  contact: {}
paths:
  /answer:
    delete:
      consumes:
      - application/json
      description: Delete a job answer
      parameters:
      - description: Answer identification
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/answer.DeleteAnswerResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/answer.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/answer.ErrorResponse'
      summary: Delete answer
      tags:
      - Answers
    get:
      consumes:
      - application/json
      description: Show a job answer
      parameters:
      - description: Answer identification
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/answer.ShowAnswerResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/answer.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/answer.ErrorResponse'
      summary: Show answer
      tags:
      - Answers
    post:
      consumes:
      - application/json
      description: Create a new job answer
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/answer.CreateAnswerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/answer.CreateAnswerResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/answer.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/answer.ErrorResponse'
      summary: Create answer
      tags:
      - Answers
    put:
      consumes:
      - application/json
      description: Update a job answer
      parameters:
      - description: Answer Identification
        in: query
        name: id
        required: true
        type: string
      - description: Answer data to Update
        in: body
        name: answer
        required: true
        schema:
          $ref: '#/definitions/answer.UpdateAnswerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/answer.UpdateAnswerResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/answer.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/answer.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/answer.ErrorResponse'
      summary: Update answer
      tags:
      - Answers
  /answers:
    get:
      consumes:
      - application/json
      description: List all job answers
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/answer.ListAnswersResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/answer.ErrorResponse'
      summary: List answers
      tags:
      - Answers
  /letter:
    delete:
      consumes:
      - application/json
      description: Delete a job letter
      parameters:
      - description: Letter identification
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/letter.DeleteLetterResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/letter.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/letter.ErrorResponse'
      summary: Delete letter
      tags:
      - Letters
    get:
      consumes:
      - application/json
      description: Show a job letter
      parameters:
      - description: Letter identification
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/letter.ShowLetterResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/letter.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/letter.ErrorResponse'
      summary: Show letter
      tags:
      - Letters
    post:
      consumes:
      - application/json
      description: Create a new job letter
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/letter.CreateLetterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/letter.CreateLetterResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/letter.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/letter.ErrorResponse'
      summary: Create letter
      tags:
      - Letters
    put:
      consumes:
      - application/json
      description: Update a job letter
      parameters:
      - description: Letter Identification
        in: query
        name: id
        required: true
        type: string
      - description: Letter data to Update
        in: body
        name: letter
        required: true
        schema:
          $ref: '#/definitions/letter.UpdateLetterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/letter.UpdateLetterResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/letter.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/letter.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/letter.ErrorResponse'
      summary: Update letter
      tags:
      - Letters
  /letters:
    get:
      consumes:
      - application/json
      description: List all job letters
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/letter.ListLettersResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/letter.ErrorResponse'
      summary: List letters
      tags:
      - Letters
  /lettersAnswer:
    delete:
      consumes:
      - application/json
      description: Delete a job lettersAnswer
      parameters:
      - description: Letter identification
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/lettersAnswer.DeleteLetterAnswerResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/lettersAnswer.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/lettersAnswer.ErrorResponse'
      summary: Delete lettersAnswer
      tags:
      - LettersAnswer
    get:
      consumes:
      - application/json
      description: Show a job lettersAnswer
      parameters:
      - description: Letter identification
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/lettersAnswer.ShowLetterAnswerResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/lettersAnswer.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/lettersAnswer.ErrorResponse'
      summary: Show lettersAnswer
      tags:
      - LettersAnswer
    post:
      consumes:
      - application/json
      description: Create a new job lettersAnswer
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/lettersAnswer.CreateLetterAnswerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/lettersAnswer.CreateLetterAnswerResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/lettersAnswer.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/lettersAnswer.ErrorResponse'
      summary: Create lettersAnswer
      tags:
      - LettersAnswer
    put:
      consumes:
      - application/json
      description: Update a job lettersAnswer
      parameters:
      - description: Letter Identification
        in: query
        name: id
        required: true
        type: string
      - description: Letter data to Update
        in: body
        name: lettersAnswer
        required: true
        schema:
          $ref: '#/definitions/lettersAnswer.UpdateLetterAnswerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/lettersAnswer.UpdateLetterAnswerResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/lettersAnswer.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/lettersAnswer.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/lettersAnswer.ErrorResponse'
      summary: Update lettersAnswer
      tags:
      - LettersAnswer
  /opening:
    delete:
      consumes:
      - application/json
      description: Delete a job opening
      parameters:
      - description: Opening identification
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/opening.DeleteOpeningResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/opening.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/opening.ErrorResponse'
      summary: Delete opening
      tags:
      - Openings
    get:
      consumes:
      - application/json
      description: Show a job opening
      parameters:
      - description: Opening identification
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/opening.ShowOpeningResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/opening.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/opening.ErrorResponse'
      summary: Show opening
      tags:
      - Openings
    post:
      consumes:
      - application/json
      description: Create a new job opening
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/opening.CreateOpeningRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/opening.CreateOpeningResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/opening.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/opening.ErrorResponse'
      summary: Create opening
      tags:
      - Openings
    put:
      consumes:
      - application/json
      description: Update a job opening
      parameters:
      - description: Opening Identification
        in: query
        name: id
        required: true
        type: string
      - description: Opening data to Update
        in: body
        name: opening
        required: true
        schema:
          $ref: '#/definitions/opening.UpdateOpeningRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/opening.UpdateOpeningResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/opening.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/opening.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/opening.ErrorResponse'
      summary: Update opening
      tags:
      - Openings
  /openings:
    get:
      consumes:
      - application/json
      description: List all job openings
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/opening.ListOpeningsResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/opening.ErrorResponse'
      summary: List openings
      tags:
      - Openings
  /question:
    delete:
      consumes:
      - application/json
      description: Delete a job question
      parameters:
      - description: Question identification
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/question.DeleteQuestionResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/question.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/question.ErrorResponse'
      summary: Delete question
      tags:
      - Questions
    get:
      consumes:
      - application/json
      description: Show a job question
      parameters:
      - description: Question identification
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/question.ShowQuestionResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/question.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/question.ErrorResponse'
      summary: Show question
      tags:
      - Questions
    post:
      consumes:
      - application/json
      description: Create a new job question
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/question.CreateQuestionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/question.CreateQuestionResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/question.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/question.ErrorResponse'
      summary: Create question
      tags:
      - Questions
    put:
      consumes:
      - application/json
      description: Update a job question
      parameters:
      - description: Question Identification
        in: query
        name: id
        required: true
        type: string
      - description: Question data to Update
        in: body
        name: question
        required: true
        schema:
          $ref: '#/definitions/question.UpdateQuestionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/question.UpdateQuestionResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/question.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/question.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/question.ErrorResponse'
      summary: Update question
      tags:
      - Questions
  /questionAnswer:
    delete:
      consumes:
      - application/json
      description: Delete a job questionAnswer
      parameters:
      - description: Question identification
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/questionAnswer.DeleteQuestionAnswerResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/questionAnswer.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/questionAnswer.ErrorResponse'
      summary: Delete questionAnswer
      tags:
      - QuestionsAnswer
    get:
      consumes:
      - application/json
      description: Show a job questionAnswer
      parameters:
      - description: Question identification
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/questionAnswer.ShowQuestionAnswerResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/questionAnswer.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/questionAnswer.ErrorResponse'
      summary: Show questionAnswer
      tags:
      - QuestionsAnswer
    post:
      consumes:
      - application/json
      description: Create a new job questionAnswer
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/questionAnswer.CreateQuestionAnswerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/questionAnswer.CreateQuestionAnswerRequest'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/questionAnswer.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/questionAnswer.ErrorResponse'
      summary: Create questionAnswer
      tags:
      - QuestionsAnswer
    put:
      consumes:
      - application/json
      description: Update a job questionAnswer
      parameters:
      - description: Question Identification
        in: query
        name: id
        required: true
        type: string
      - description: Question data to Update
        in: body
        name: questionAnswer
        required: true
        schema:
          $ref: '#/definitions/questionAnswer.UpdateQuestionAnswerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/questionAnswer.UpdateQuestionAnswerResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/questionAnswer.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/questionAnswer.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/questionAnswer.ErrorResponse'
      summary: Update questionAnswer
      tags:
      - QuestionsAnswer
  /questions:
    get:
      consumes:
      - application/json
      description: List all job questions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/question.ListQuestionsResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/question.ErrorResponse'
      summary: List questions
      tags:
      - Questions
  /questionsAnswer:
    get:
      consumes:
      - application/json
      description: List all job questionsAnswer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/questionAnswer.ListQuestionsAnswerResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/questionAnswer.ErrorResponse'
      summary: List questionsAnswer
      tags:
      - QuestionsAnswer
  /userAnswer:
    delete:
      consumes:
      - application/json
      description: Delete a job userAnswer
      parameters:
      - description: UserAnswer identification
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userAnswer.DeleteUserAnswerResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/userAnswer.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/userAnswer.ErrorResponse'
      summary: Delete userAnswer
      tags:
      - UserAnswer
    get:
      consumes:
      - application/json
      description: Show a job userAnswer
      parameters:
      - description: UserAnswer identification
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userAnswer.ShowUserAnswerResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/userAnswer.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/userAnswer.ErrorResponse'
      summary: Show userAnswer
      tags:
      - UserAnswer
    post:
      consumes:
      - application/json
      description: Create a new job userAnswer
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/userAnswer.CreateUserAnswerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userAnswer.CreateUserAnswerResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/userAnswer.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/userAnswer.ErrorResponse'
      summary: Create userAnswer
      tags:
      - UserAnswer
    put:
      consumes:
      - application/json
      description: Update a job UserAnswer
      parameters:
      - description: UserAnswer Identification
        in: query
        name: id
        required: true
        type: string
      - description: UserAnswer data to Update
        in: body
        name: UserAnswer
        required: true
        schema:
          $ref: '#/definitions/userAnswer.UpdateUserAnswerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userAnswer.UpdateUserAnswerResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/userAnswer.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/userAnswer.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/userAnswer.ErrorResponse'
      summary: Update UserAnswer
      tags:
      - UserAnswer
  /usersAnswer:
    get:
      consumes:
      - application/json
      description: List all job usersAnswer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userAnswer.ListUsersAnswerResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/userAnswer.ErrorResponse'
      summary: List usersAnswer
      tags:
      - UserAnswer
swagger: "2.0"
